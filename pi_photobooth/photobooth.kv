#:kivy 1.10.0
#:import win kivy.core.window

#:import NavigationDrawer kivy.garden.navigationdrawer.NavigationDrawer

#:import SideBarMenu kivygallery.gallery.sidebarmenu.SideBarMenu
#:import SideBarLabel kivygallery.gallery.sidebarlabel.SideBarLabel

NavigationDrawer:
    id: drawer
    BoxLayout:
        orientation: 'vertical'
        id: nav_drawer
        Label:
            text: "Navigation"
        Button:
            text: "Welcome"
            on_release: 
                app.root.ids.scr_mngr.transition.direction = 'left'
                app.root.ids.scr_mngr.current = 'welcome'
        Button:
            text: "Settings"
            on_release: 
                app.root.ids.scr_mngr.transition.direction = 'right'
                app.root.ids.scr_mngr.current = 'settings'
        Button:
            text: "Shoot Me"
            on_release: 
                app.root.ids.toolbar.size_hint_y = 0
                app.root.ids.scr_mngr.transition.direction = 'up'
                app.root.ids.scr_mngr.current = 'photo'
        Button:
            text: "Exit"
            on_release: app.stop()
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            id: toolbar
            orientation: 'horizontal'
            size_hint_y: .1
            Button:
                text: 'Menu'
                size_hint_x: .2
                on_press: root.toggle_state()
            Label:
                text: "Photobooth"
        ScreenManager:
            id: scr_mngr
            MenuScreen:
                name: "welcome"
            SettingsScreen:
                name: "settings"
            PhotoboothScreen:
                name: "photo"
            Screen:
                name: 'gallery'
                on_pre_enter: gallery_widget.load()
                on_leave: gallery_widget.unload()
                ScrollView:
                    do_scroll_x: False
                    GalleryWidget:
                        id: gallery_widget
                        ScreenMgr:
                            media: self.parent.media
<Settings>:
    on_close:
        app.root.ids.scr_mngr.transition.direction = 'left'
        app.root.ids.scr_mngr.current = "welcome"

<MenuScreen>:
    RelativeLayout:
        BoxLayout:
            canvas:
            spacing:10
            orientation: "vertical"
            Label:
                size_hint: (1, 1.3)
                text: "Raspberry Pi Photobooth"
            BoxLayout:
                spacing:10
                orientation: "horizontal"
                VisualLog:
                    size_hint:(1.1, 1)
                Button:
                    size_hint_y: 1
                    id: settings_button
                    text: "Run Photobooth"
                    on_press:
                        #On click of this button, we should start taking pictures
                        app.root.ids.toolbar.size_hint_y = 0
                        app.root.ids.scr_mngr.transition.direction = 'up'
                        app.root.ids.scr_mngr.current = 'photo'

<PhotoboothPreview>:
    canvas:
        Color:
            rgba: 0, 0, 0, 0
        Rectangle:
            pos: self.pos
            size: self.size
    MemoryImage:
        size_hint: (1,1)
        id: image
        memory_data: root.image_data

<PhotoboothScreen>:
    RelativeLayout:
        PhotoboothPreview:
            pos_hint: {'center_x': .5, 'center_y': .5}
            size_hint: (1,1)
            id: preview
        BoxLayout:
            pos_hint: {'center_x': .5, 'top': 1}
            size_hint_y:.1            
            orientation: 'horizontal'
            Label:
                id:title
                text: ''
                font_size:50
                outline_width:2
        Countdown:
            pos_hint: {'x': .0, 'y': .8}
            size_hint: (.1, .3)
            id: countdown
            starting_number: 5
        Button:
            size_hint: (.5, .1)
            pos_hint: {'center_x': .5, 'y': .05}
            id: shoot_button
            text: "Take My Picture"
            on_press:
                root.run_booth()
        Button:
            size_hint: (.1, .1)
            pos_hint: {'x': .9, 'y': .9}
            id: close_button
            text: "Cancel"
            on_press: 
                root.manager.transition.direction = 'down'
                root.manager.current = 'welcome'
                app.root.ids.toolbar.size_hint_y = None
<Countdown>:
    Label:
        id: label
        text: str(root.current) if root.current >= 0 else ''
        font_size:50
        outline_width:2

<VisualLog>:
    cols:1
    rows:1
    size_hint: (1, 1)
    ScrollView:
        Label:
            font_size: 12
            text_size: self.width, None
            size_hint_y: None
            height: self.texture_size[1]
            text: root.output

# Copied from hackerbrot/kivy-gallery

<SideBarScreen>:
    menu: menu
    lbl: lbl
    content: content
    FloatLayout:
        id: content
    FloatLayout:
        SideBarMenu:
            id: menu
            height: root.top - lbl.y
            y: lbl.top
        SideBarLabel:
            id: lbl
            top: root.top

<SideBarMenu>:
    orientation: 'horizontal'
    size_hint_y: None

    canvas.before:
        Color:
            rgba: 0.1, 0.1, 0.1, 1
        Rectangle:
            pos: self.pos
            size: self.size

<SideBarLabel>:
    size_hint_y: None
    height: win.Window.height * 0.04
    canvas.before:
        Color:
            rgba: 0.1, 0.1, 0.1, 1
        Rectangle:
            pos: self.pos
            size: self.size

<SideBarButton>:
    background_down: self.background_normal
    
<Overview>:
    content: content
    do_scroll_y: False
    size_hint: None, None
    size: win.Window.size
    GridLayout:
        id: content
        rows: 1
        spacing: win.Window.width * 0.01
        size_hint_x: None
        width: self.minimum_width

<OverviewItem>:
    size_hint_x: None
    width: win.Window.width * 0.25
    background_down: self.background_normal
    text_size: None, self.height * 0.8
    valign: 'bottom'

<Stage>:
    content: content
    anchor_y: 'bottom'
    Carousel:
        id: content

<ExplorerItem>:
    image: image
    on_size: self.center = win.Window.center
    size: image.size
    size_hint: None, None

    Image:
        id: image
        size: 400, 400 / self.image_ratio
        canvas.before:
            Color:
                rgba: 0.1, 0.1, 0.1, 1
            Rectangle:
                pos: (-2, -2)
                size: (root.width + 4, root.height + 4)
